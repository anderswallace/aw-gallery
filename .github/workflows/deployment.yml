name: Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed

jobs:
  deploy:
    name: Deploy to Production
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: production
    env:
          VITE_API_URI: ${{ secrets.VITE_API_URI }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Fetch main branch and detect changes
        id: changes
        run: |
            # Fetch origin/main to compare with current commit
            git fetch origin main

            echo "client_needs_build=false" >> $GITHUB_OUTPUT
            echo "server_needs_build=false" >> $GITHUB_OUTPUT

            # Get list of files changed between this commit and last commit
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)

            if echo "$CHANGED_FILES" | grep -q '^client/'; then
              echo "client_needs_build=true" >> $GITHUB_OUTPUT
            fi

            if echo "$CHANGED_FILES" | grep -q '^server/'; then
              echo "server_needs_build=true" >> $GITHUB_OUTPUT
            fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Client Image
        if: steps.changes.outputs.client_needs_build == 'true'
        run: >
            docker buildx build --push
            --build-arg VITE_API_URI=$VITE_API_URI
            -t $DOCKERHUB_USERNAME/client:latest
            -t $DOCKERHUB_USERNAME/client:${{ github.sha }}
            ./client

      - name: Build and Push Server Image
        if: steps.changes.outputs.server_needs_build == 'true'
        run: >
          docker buildx build --push
          -t $DOCKERHUB_USERNAME/server:latest
          -t $DOCKERHUB_USERNAME/server:${{ github.sha }}
          ./server
