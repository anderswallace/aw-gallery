name: Continuous Integration

on:
  push:
    branches:
      - main
jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      client_changed: ${{ steps.filter.outputs.client_changed }}
      server_changed: ${{ steps.filter.outputs.server_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch main branch
        run: git fetch origin main

      - id: filter
        run: |
          echo "client_changed=false" >> $GITHUB_OUTPUT
          echo "server_changed=false" >> $GITHUB_OUTPUT

          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)

          if echo "$CHANGED_FILES" | grep -q '^client/'; then
            echo "client_changed=true" >> $GITHUB_OUTPUT
          fi

          if echo "$CHANGED_FILES" | grep -q '^server/'; then
            echo "server_changed=true" >> $GITHUB_OUTPUT
          fi
      

  test-client:
    name: Run Client Tests
    needs: detect-changes
    if: needs.detect-changes.outputs.client_changed == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23.5.0
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm run test

  test-server:
    name: Run Server Tests
    needs: detect-changes
    if: needs.detect-changes.outputs.server_changed == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23.5.0
          cache: "npm"
          cache-dependency-path: server/package-lock.json

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm run test

  build-client:
    name: Build Client
    runs-on: ubuntu-latest
    needs: test-client
    defaults:
      run:
        working-directory: client

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: client/node_modules
          key: ${{ runner.os }}-client-node-modules-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-client-node-modules-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23.5.0
          cache: npm

      - name: Install Client Dependencies
        run: npm install

      - name: Build Client
        env:
          VITE_API_URI: ${{ secrets.VITE_API_URI }}
        run: npm run build

  build-server:
    name: Build Server
    runs-on: ubuntu-latest
    needs: test-server
    defaults:
      run:
        working-directory: server

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: server/node_modules
          key: ${{ runner.os }}-server-node-modules-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-server-node-modules-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23.5.0
          cache: npm

      - name: Install Server Dependencies
        run: npm install

      - name: Build Client
        run: npm run build

      - name: Generate Prisma Client
        run: npx prisma generate
